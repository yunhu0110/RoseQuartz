"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  __INTERNAL__setPortOneSdkUrl: () => setPortOneJsSdkUrl,
  requestIssueBillingKey: () => requestIssueBillingKey,
  requestPayment: () => requestPayment
});
module.exports = __toCommonJS(src_exports);

// src/loader.ts
var promise = null;
var portone = {
  jsSdkUrl: "https://cdn.portone.io/v2/browser-sdk.js"
};
function findScript() {
  return document.querySelector(
    `script[src="${portone.jsSdkUrl}"]`
  );
}
function injectScript() {
  const script = document.createElement("script");
  script.src = portone.jsSdkUrl;
  const headOrBody = document.head || document.body;
  if (!headOrBody)
    throw new Error("[PortOne] Expected document.body not to be null");
  return headOrBody.appendChild(script);
}
function loadScript() {
  if (promise != null)
    return promise;
  return promise = new Promise((resolve, reject) => {
    if (window.PortOne)
      return resolve(window.PortOne);
    try {
      const script = findScript() || injectScript();
      script.addEventListener("load", () => {
        if (window.PortOne)
          return resolve(window.PortOne);
        reject(new Error("[PortOne] Failed to load window.PortOne"));
      });
      script.addEventListener("error", () => {
        reject(new Error("[PortOne] Failed to load window.PortOne"));
      });
    } catch (error) {
      return reject(error);
    }
  });
}
function setPortOneJsSdkUrl(url) {
  return portone.jsSdkUrl = url;
}

// src/index.ts
function requestPayment(request) {
  return loadScript().then((sdk) => sdk.requestPayment(request));
}
function requestIssueBillingKey(request) {
  return loadScript().then((sdk) => sdk.requestIssueBillingKey(request));
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  __INTERNAL__setPortOneSdkUrl,
  requestIssueBillingKey,
  requestPayment
});
